/*************************************************************************//*!
					
					@file	VRManager.h
					@brief	VR関連管理。

															@author	CDW
															@date	2014.05.14
*//**************************************************************************/

//ONCE
#ifndef		__VRMANAGER__H__

#define		__VRMANAGER__H__

#include	<openvr.h>
#include	<Mof.h>
#pragma comment (lib, "openvr_api.lib")

namespace Mof {
	
	/*******************************//*!
	@brief	VR管理クラス
			VR管理クラス
	@author	CDW
	*//********************************/
	class MOFLIBRARY_API CVRManager {
	public:
		/*******************************//*!
		@brief	VR視点列挙
				VR視点列挙
		@author	CDW
		*//********************************/
		enum Eye {
			Left,											//!<左目
			Right,											//!<右目

			Count,											//!<列挙数
			Default = Count,								//!<カメラ表示用中央
		};


		/*******************************//*!
		@brief	コントローラ
		*//********************************/
		enum TrackingDevice {
			TD_HMD,
			TD_LEFT,
			TD_RIGHT,
			TD_COUNT
		};

	private:
		/*******************//*!
		VRデバイス
		*//********************/
		static vr::IVRSystem*						m_pHMD;

		/*******************//*!
		VR描画モデル
		*//********************/
		static vr::IVRRenderModels*					m_pRenderModels;

		/*******************//*!
		VR姿勢
		*//********************/
		static vr::TrackedDevicePose_t				m_TrackedDevicePose[vr::k_unMaxTrackedDeviceCount];

		/*******************//*!
		VR左コントローラー
		*//********************/
		static vr::VRControllerState_t				m_LeftControllerState;

		/*******************//*!
		VR左コントローラー
		*//********************/
		static vr::VRControllerState_t				m_LeftControllerPrevState;

		/*******************//*!
		VR右コントローラー
		*//********************/
		static vr::VRControllerState_t				m_RightControllerState;

		/*******************//*!
		VR右コントローラー
		*//********************/
		static vr::VRControllerState_t				m_RightControllerPrevState;

		/*******************//*!
		VR幅
		*//********************/
		static MofU32								m_Width;

		/*******************//*!
		VR高さ
		*//********************/
		static MofU32								m_Height;

		/*******************//*!
		VR姿勢行列
		*//********************/
		static CMatrix44							m_DevicePose[vr::k_unMaxTrackedDeviceCount];

		/*******************//*!
		VRHMD行列
		*//********************/
		static CMatrix44							m_HMDPose;

		/*******************//*!
		コントローラー認識
		*//********************/
		static MofBool								m_bLeftController;

		/*******************//*!
		VRHMD行列
		*//********************/
		static CMatrix44							m_LeftControllerPose;

		/*******************//*!
		VRHMD行列
		*//********************/
		static CVector3								m_LeftControllerVector;

		/*******************//*!
		コントローラー認識
		*//********************/
		static MofBool								m_bRightController;

		/*******************//*!
		VRHMD行列
		*//********************/
		static CMatrix44							m_RightControllerPose;

		/*******************//*!
		VRHMD行列
		*//********************/
		static CVector3								m_RightControllerVector;

		
		/*******************//*!
		VR描画テクスチャ
		*//********************/
		static LPTexture							m_pRenderTexture[Count];

		/*******************//*!
		VR深度
		*//********************/
		static LPDepthTarget						m_pDepthTarget;

		
		/*******************//*!
		描画テクスチャ退避
		*//********************/
		static LPRenderTarget						m_pOrigRenderTarget;

		/*******************//*!
		描画深度退避
		*//********************/
		static LPDepthTarget						m_pOrigDepthTarget;

		/*******************//*!
		描画ビューポート退避
		*//********************/
		static ViewPort								m_OrigViewPort;
		
		/*******************//*!
		VRスケール
		*//********************/
		static MofFloat								m_VRScale;


		static LPGeometry*							m_Models;
		static int									m_ModelsCount;

	public:
		/*************************************************************************//*!
				@brief			初期化
				@param			None

				@return			TRUE			正常終了<br>
								FALSE			設定失敗
		*//**************************************************************************/
		static MofBool Initialize(void);
		
		/*************************************************************************//*!
				@brief			VR姿勢行列の更新
				@param			None
		
				@return			TRUE		成功<br>
								それ以外	失敗、エラーコードが戻り値となる
		*//**************************************************************************/
		static MofBool Update(void);
		
		/*************************************************************************//*!
				@brief			開始
				@param[in]		eye			視点
		
				@return			TRUE		成功<br>
								それ以外	失敗、エラーコードが戻り値となる
		*//**************************************************************************/
		static MofBool Begin(CVRManager::Eye eye);

		/*************************************************************************//*!
				@brief			終了
				@param			None
		
				@return			TRUE		成功<br>
								それ以外	失敗、エラーコードが戻り値となる
		*//**************************************************************************/
		static MofBool CVRManager::End();

		/*************************************************************************//*!
				@brief			テクスチャをVR用の描画テクスチャに転送する
				@param[in]		pTex		転送するシーンテクスチャ
				@param[in]		eye			転送するVR視点
				
				@return			TRUE		成功<br>
								それ以外	失敗、エラーコードが戻り値となる
		*//**************************************************************************/
		static MofBool RenderTexture(LPTexture pTex, CVRManager::Eye eye);

		/*************************************************************************//*!
				@brief			VR描画テクスチャ転送
				@param			None
				
				@return			TRUE		成功<br>
								それ以外	失敗、エラーコードが戻り値となる
		*//**************************************************************************/
		static MofBool Present(void);

		/*************************************************************************//*!
				@brief			解放
				@param			None
				
				@return			TRUE		成功<br>
								それ以外	失敗、エラーコードが戻り値となる
		*//**************************************************************************/
		static MofBool Release(void);

		/*************************************************************************//*!
				@brief			VRマトリクスをライブラリの行列形式に変換する
				@param[in]		matPose		VRマトリクス
				
				@return			変換結果行列
		*//**************************************************************************/
		static CMatrix44 ConvertMatrix44(const vr::HmdMatrix34_t& matPose);

		/*************************************************************************//*!
				@brief			VRマトリクスをライブラリの行列形式に変換する
				@param[in]		matPose		VRマトリクス
				@param[out]		out			出力行列
				
				@return			TRUE		成功<br>
								それ以外	失敗、エラーコードが戻り値となる
		*//**************************************************************************/
		static MofBool ConvertMatrix44(const vr::HmdMatrix34_t& matPose, CMatrix44& out);
		
		/*************************************************************************//*!
				@brief			VRマトリクスをライブラリの行列形式に変換する
				@param[in]		matPose		VRマトリクス
				
				@return			変換結果行列
		*//**************************************************************************/
		static CMatrix44 ConvertMatrix44(const vr::HmdMatrix44_t& matPose);

		/*************************************************************************//*!
				@brief			VRマトリクスをライブラリの行列形式に変換する
				@param[in]		matPose		VRマトリクス
				@param[out]		out			出力行列
				
				@return			TRUE		成功<br>
								それ以外	失敗、エラーコードが戻り値となる
		*//**************************************************************************/
		static MofBool ConvertMatrix44(const vr::HmdMatrix44_t& matPose, CMatrix44& out);
		
		
		//----------------------------------------------------------------------------
		////Is
		//----------------------------------------------------------------------------
		/*************************************************************************//*!
				@brief			VR左コントローラーの有無を判定する
				@param			None
				
				@return			TRUE		あり<br>
								FALSE		なし
		*//**************************************************************************/
		static MofBool IsLeftController(void);

		/*************************************************************************//*!
				@brief			VR左コントローラーのタッチを判定する
				@param			None
				
				@return			TRUE		タッチ<br>
								FALSE		タッチなし
		*//**************************************************************************/
		static MofBool IsLeftTouch(void);

		/*************************************************************************//*!
				@brief			VR左コントローラーのボタン押下を判定する
				@param[in]		id			ボタンID
				
				@return			TRUE		タッチ<br>
								FALSE		タッチなし
		*//**************************************************************************/
		static MofBool IsLeftHold(MofU32 id);

		/*************************************************************************//*!
				@brief			VR右コントローラーの有無を判定する
				@param			None
				
				@return			TRUE		あり<br>
								FALSE		なし
		*//**************************************************************************/
		static MofBool IsRightController(void);

		/*************************************************************************//*!
				@brief			VR右コントローラーのタッチを判定する
				@param			None
				
				@return			TRUE		タッチ<br>
								FALSE		タッチなし
		*//**************************************************************************/
		static MofBool IsRightTouch(void);

		/*************************************************************************//*!
				@brief			VR右コントローラーのボタン押下を判定する
				@param[in]		id			ボタンID
				
				@return			TRUE		タッチ<br>
								FALSE		タッチなし
		*//**************************************************************************/
		static MofBool IsRightHold(MofU32 id);

		//----------------------------------------------------------------------------
		////Set
		//----------------------------------------------------------------------------
		/*************************************************************************//*!
				@brief			VRスケールを取得する
				@param[in]		s			VRスケール
				
				@return			TRUE		成功<br>
								それ以外	失敗、エラーコードが戻り値となる
		*//**************************************************************************/
		static MofBool SetVRScale(MofFloat s);

		//----------------------------------------------------------------------------
		////Get
		//----------------------------------------------------------------------------
		/*************************************************************************//*!
				@brief			VRシステムを取得する
				@param			None
				
				@return			VRシステム
		*//**************************************************************************/
		static vr::IVRSystem* GetDevice(void);

		/*************************************************************************//*!
				@brief			VR描画モデルを取得する
				@param			None
				
				@return			VR描画モデル
		*//**************************************************************************/
		static vr::IVRRenderModels* GetRenderModel(void);

		/*************************************************************************//*!
				@brief			VR高さを取得する
				@param			None
				
				@return			VR高さ
		*//**************************************************************************/
		static MofU32 GetWidth(void);

		/*************************************************************************//*!
				@brief			VR高さを取得する
				@param			None
				
				@return			VR高さ
		*//**************************************************************************/
		static MofU32 GetHeight(void);

		/*************************************************************************//*!
				@brief			VR用の描画テクスチャを取得
				@param[in]		eye			VR視点
				
				@return			VR用の描画テクスチャ
		*//**************************************************************************/
		static LPTexture GetTexture(CVRManager::Eye eye);

		/*************************************************************************//*!
				@brief			VRHMD行列を取得する
				@param			None
				
				@return			VRHMD行列
		*//**************************************************************************/
		static CMatrix44& GetHMDMatrix(void);

		/*************************************************************************//*!
				@brief			VR左コントローラー行列を取得する
				@param			None
				
				@return			VR左コントローラー行列
		*//**************************************************************************/
		static CMatrix44& GetLeftControllerMatrix(void);

		/*************************************************************************//*!
				@brief			VR左コントローラー姿勢ベクトルを取得する
				@param			None
				
				@return			VR左コントローラー姿勢ベクトル
		*//**************************************************************************/
		static CVector3& GetLeftControllerPoseVector(void);

		/*************************************************************************//*!
				@brief			VR右コントローラー行列を取得する
				@param			None
				
				@return			VR右コントローラー行列
		*//**************************************************************************/
		static CMatrix44& GetRightControllerMatrix(void);

		/*************************************************************************//*!
				@brief			VR右コントローラー姿勢ベクトルを取得する
				@param			None
				
				@return			VR右コントローラー姿勢ベクトル
		*//**************************************************************************/
		static CVector3& GetRightControllerPoseVector(void);
		
		/*************************************************************************//*!
				@brief			VR左コントローラーＸタッチを取得する
				@param			None
				
				@return			VR左コントローラーＸタッチ
		*//**************************************************************************/
		static MofFloat GetLeftTouchHorizontal(void);

		/*************************************************************************//*!
				@brief			VR左コントローラーＹタッチを取得する
				@param			None
				
				@return			VR左コントローラーＹタッチ
		*//**************************************************************************/
		static MofFloat GetLeftTouchVertical(void);

		/*************************************************************************//*!
				@brief			VR右コントローラーＸタッチを取得する
				@param			None
				
				@return			VR右コントローラーＸタッチ
		*//**************************************************************************/
		static MofFloat GetRightTouchHorizontal(void);

		/*************************************************************************//*!
				@brief			VR右コントローラーＹタッチを取得する
				@param			None
				
				@return			VR右コントローラーＹタッチ
		*//**************************************************************************/
		static MofFloat GetRightTouchVertical(void);


		
		/*************************************************************************//*!
				@brief			VRコントローラータッチを取得する
				@param			None
				
				@return			VRコントローラータッチ
		*//**************************************************************************/
		static Vector2 GetTouch(TrackingDevice no);
		
		/*************************************************************************//*!
				@brief			VRコントローラートリガーを取得する
				@param			左右
				
				@return			VRコントローラートリガー
		*//**************************************************************************/
		static MofFloat GetTrigger(TrackingDevice no);

		/*************************************************************************//*!
				@brief			VRスケールを取得する
				@param			None
				
				@return			VRスケール
		*//**************************************************************************/
		static MofFloat GetVRScale(void);



		static bool LoadRenderModels();
		static LPGeometry LoadRenderModels(const char* name);

		static LPGeometry GetVRModels(TrackingDevice device);
		static Matrix44 GetTrackingMatrix(TrackingDevice device);


	private:
		//作成を禁止する
		CVRManager() {};
		CVRManager(const CVRManager& pObj) {};
	};

	#include	"VRManager.inl"
}

#endif

//[EOF]